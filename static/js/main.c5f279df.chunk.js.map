{"version":3,"sources":["components/Store.tsx","components/tools/Dropzone.tsx","components/hooks/useInput.ts","components/editor/Field.tsx","components/editor/FieldBlock.tsx","components/editor/Editor.tsx","components/tools/exporter.ts","components/tools/Toolbar.tsx","components/App.tsx","index.tsx"],"names":["initialState","data","Store","React","createContext","reducer","state","action","type","payload","Dropzone","props","onDrop","accept","useDropzone","getRootProps","getInputProps","isDragActive","className","getColorForValue","value","color","isNaN","inferTypeFromString","useInput","initialValue","context","useState","inputVal","setInputVal","inputColor","setInputColor","useContext","dispatch","handleInputChange","e","currentTarget","handleInputBlur","newData","target","i","length","parseFloat","Field","name","parentKeys","styles","field","display","height","lineHeight","label","input","paddingLeft","backgroundColor","border","borderRadius","outline","FelaComponent","style","onChange","onBlur","FieldBlock","isArrayItem","isLastItem","showBorder","isCollapsed","setCollapsed","handleClick","fieldBlock","borderLeft","blockLabel","cursor","blockIndex","brackets","keys","Object","bracket","Array","isArray","onClick","children","map","key","parentLength","Editor","handleFileSelect","useCallback","acceptedFiles","console","log","file","reader","FileReader","onload","JSON","parse","result","readAsText","padding","width","minWidth","flex","overflow","boxShadow","fontSize","scrollbarColor","handleExportData","Blob","stringify","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Toolbar","toolbar","justifyContent","button","fontFamily","margin","text","icon","App","flexFlow","alignItems","renderer","createRenderer","ReactDOM","render","RendererProvider","useReducer","Provider","getElementById"],"mappings":"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","file":"static/js/main.c5f279df.chunk.js","sourcesContent":["import React, { useReducer, useContext } from 'react'\n\ninterface IAction {\n  type: string\n  payload: any\n}\n\ninterface IState {\n  data: any\n}\n\nexport const initialState: IState = {\n  data: {}\n}\n\nexport const Store = React.createContext<IState | any>(initialState)\n\nexport const reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case 'SET_DATA':\n      return { ...state, data: action.payload }\n    case 'CHANGE_DATA':\n      return { ...state, data: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const StoreProvider = (props: any): JSX.Element => {\n  const state = useReducer(reducer, initialState)\n  return <Store.Provider value={state}>{props.children}</Store.Provider>\n}\n","import React from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nconst Dropzone = (props: any) => {\n  const { onDrop, accept } = props\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept\n  })\n\n  return (\n    <div {...getRootProps()}>\n      <input className='dropzone-input' {...getInputProps()} />\n      {isDragActive ? (\n        <p className='dropzone-content'>Drop file here</p>\n      ) : (\n        <p className='dropzone-content'>\n          Drag and drop a JSON file here or click to select file\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Dropzone\n","import React, { useState, useContext } from 'react'\nimport { Store } from '../Store'\n\nexport type ValueType = any\n\nconst inferTypeFromString = (value: any) => {\n  if (value === 'true' || value === 'false' || typeof value === 'boolean')\n    return 'boolean'\n  else if (!isNaN(value) || typeof value === 'number') return 'number'\n  else return 'string'\n}\n\nconst getColorForValue = (value: any) => {\n  const type = inferTypeFromString(value)\n  let color = '#ce824a'\n  switch (type) {\n    case 'string':\n      break\n    case 'number':\n      color = '#b5cea8'\n      break\n    case 'boolean':\n      color = '#358cd6'\n      break\n    default:\n      break\n  }\n  return color\n}\n\nconst unstringifyValue = (value: any) => {\n  if (!isNaN(value)) return parseFloat(value)\n  else if (value === 'true') return true\n  else if (value === 'false') return false\n  else return value\n}\n\nconst useInput = (initialValue: ValueType, context: string[]) => {\n  const [inputVal, setInputVal] = useState<ValueType>(initialValue)\n  const [inputColor, setInputColor] = useState<string>(\n    getColorForValue(inputVal)\n  )\n  const [state, dispatch] = useContext(Store)\n\n  const handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setInputVal(e.currentTarget.value)\n  }\n\n  // Only update store on blur\n  const handleInputBlur = () => {\n    // Update color based on type\n    setInputColor(getColorForValue(inputVal))\n\n    // Update store\n    let newData = state.data\n    let target = newData\n\n    for (let i = 0; i < context.length - 1; i++) {\n      target = target[context[i]]\n    }\n\n    target[context[context.length - 1]] = unstringifyValue(inputVal)\n\n    dispatch({ type: 'SET_DATA', payload: newData })\n  }\n\n  return {\n    inputVal,\n    handleInputChange,\n    handleInputBlur,\n    inputColor\n  }\n}\n\nexport default useInput\n","import React from 'react'\nimport { FelaComponent } from 'react-fela'\nimport useInput, { ValueType } from '../hooks/useInput'\n\ntype FieldProps = {\n  name: string\n  value: any\n  parentKeys: string[]\n}\n\nconst Field = (props: FieldProps) => {\n  const { name, value, parentKeys } = props\n  const { inputVal, inputColor, handleInputChange, handleInputBlur } = useInput(\n    value,\n    parentKeys\n  )\n\n  const styles = {\n    field: {\n      display: 'flex',\n      height: '1.5em',\n      lineHeight: '1.5em'\n    },\n    label: {\n      display: 'inline-block',\n      color: '#9cdcfe'\n    },\n    input: {\n      paddingLeft: '0.3em',\n      backgroundColor: '#333333',\n      color: `${inputColor}`,\n      border: '1px solid #202020',\n      borderRadius: '3px',\n      outline: 'none'\n    }\n  }\n\n  return (\n    <FelaComponent style={styles.field}>\n      <span style={styles.label}>{`${name}: `}</span>\n      <input\n        style={styles.input}\n        type='text'\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        value={inputVal}\n        name={name}\n      />\n    </FelaComponent>\n  )\n}\n\nexport default Field\n","import React, { useState } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport Field from './Field'\n\ntype FieldBlockProps = {\n  name: string\n  field: any\n  isArrayItem: boolean\n  isLastItem: boolean\n  showBorder?: boolean\n  parentLength: number\n  parentKeys: string[] // An array of keys to keep track of which portion of data\n}\n\nconst FieldBlock = (props: FieldBlockProps) => {\n  const {\n    field,\n    name,\n    parentKeys,\n    isArrayItem,\n    isLastItem,\n    showBorder = true\n  } = props\n  const [isCollapsed, setCollapsed] = useState(false)\n\n  const handleClick = () => {\n    setCollapsed(!isCollapsed)\n  }\n\n  const styles = {\n    fieldBlock: {\n      paddingLeft: '1.25em',\n      borderLeft: `${showBorder ? '1px solid #454545' : 'none'}`,\n      ':hover': {\n        backgroundColor: 'rgba(100,100,100,0.05)'\n      }\n    },\n    blockLabel: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      height: '1.5em',\n      lineHeight: '1.5em',\n      color: '#9cdcfe'\n    },\n    blockIndex: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      color: '#c586c0'\n    },\n    brackets: {\n      color: 'white'\n    }\n  }\n\n  // Wraps label and block in brackets depending on object type\n  const BracketsWrapper = (props: any) => {\n    const bracket = Array.isArray(props.field) ? ['[', ']'] : ['{', '}']\n\n    return (\n      <>\n        <FelaComponent\n          style={isArrayItem ? styles.blockIndex : styles.blockLabel}\n        >\n          <div onClick={handleClick}>\n            {name}\n            <span style={styles.brackets}>: {bracket[0]}</span>\n            {isCollapsed && (\n              <span style={styles.brackets}>\n                &#8230;\n                {bracket[1] + (isLastItem ? '' : ',')}\n              </span>\n            )}\n          </div>\n        </FelaComponent>\n        {props.children}\n        {!isCollapsed && (\n          <span style={styles.brackets}>\n            {bracket[1] + (isLastItem ? '' : ',')}\n          </span>\n        )}\n      </>\n    )\n  }\n\n  const keys = Object.keys(field)\n\n  return (\n    <FelaComponent style={styles.fieldBlock}>\n      {typeof field === 'object' ? (\n        <BracketsWrapper field={field}>\n          {!isCollapsed &&\n            keys.map((key, i) => {\n              return (\n                <FieldBlock\n                  key={i}\n                  name={key}\n                  parentKeys={[...parentKeys, key]}\n                  parentLength={keys.length}\n                  isArrayItem={Array.isArray(field)}\n                  isLastItem={keys.length - 1 === i}\n                  field={field[key]}\n                />\n              )\n            })}\n        </BracketsWrapper>\n      ) : (\n        <Field name={name} value={field} parentKeys={parentKeys} />\n      )}\n    </FelaComponent>\n  )\n}\n\nexport default FieldBlock\n","import React, { useContext, useCallback } from 'react'\nimport Dropzone from '../tools/Dropzone'\nimport FieldBlock from './FieldBlock'\nimport { Store } from '../Store'\n\nconst Editor = (props: any) => {\n  const [state, dispatch] = useContext(Store)\n\n  const handleFileSelect = useCallback(acceptedFiles => {\n    console.log(acceptedFiles)\n    // Loop through accepted files\n    acceptedFiles.map((file: Blob) => {\n      // Initialize FileReader browser API\n      const reader = new FileReader()\n      // onload callback gets called after the reader reads the file data\n      reader.onload = (file => (e: any) => {\n        let data = JSON.parse(e.target.result)\n        dispatch({ type: 'CHANGE_DATA', payload: data })\n      })(file)\n\n      reader.readAsText(file)\n    })\n  }, [])\n\n  const style = {\n    padding: '1em',\n    width: '50%',\n    minWidth: '30em',\n    flex: '1 1 auto',\n    overflow: 'auto',\n    backgroundColor: '#1e1e1e',\n    boxShadow: 'inset 0 0 5px #101010',\n    borderRadius: '5px',\n    fontSize: '16px',\n    scrollbarColor: '#2e2e2e #1e1e1e'\n  }\n\n  const keys = Object.keys(state.data)\n\n  return (\n    <div style={style}>\n      <Dropzone onDrop={handleFileSelect} accept='application/json' />\n      {keys.map((key, i) => {\n        const field = state.data[key]\n        return (\n          <FieldBlock\n            key={i}\n            name={key}\n            parentKeys={[key]}\n            parentLength={keys.length}\n            isArrayItem={Array.isArray(field)}\n            isLastItem={keys.length - 1 === i}\n            showBorder={false}\n            field={field}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Editor\n","export const handleExportData = (data: any) => {\n  const file = new Blob([JSON.stringify(data, null, 2)], {\n    type: 'application/json'\n  })\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, '.json')\n  else {\n    // Others\n    let a = document.createElement('a'),\n      url = URL.createObjectURL(file)\n    a.href = url\n    a.download = '.json'\n    document.body.appendChild(a)\n    a.click()\n    setTimeout(() => {\n      document.body.removeChild(a)\n      window.URL.revokeObjectURL(url)\n    }, 0)\n  }\n}\n","import React, { useContext } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport { Store } from '../Store'\nimport { handleExportData } from './exporter'\n\nconst Toolbar = () => {\n  const [state, dispatch] = useContext(Store)\n\n  const styles = {\n    toolbar: {\n      width: '100%',\n      flex: '0 1 50px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    button: {\n      fontFamily: 'sans-serif',\n      fontSize: '16px',\n      lineHeight: '2.5em',\n      cursor: 'pointer',\n      'text-align': 'center',\n      width: '12em',\n      margin: '0.5em 0.5em 0.5em 0',\n      backgroundColor: '#444',\n      border: '3px solid #222',\n      borderRadius: '7px',\n      ':hover': {\n        backgroundColor: '#555'\n      }\n    }\n  }\n\n  const Button = (props: { onClick: Function; text: string; icon: string }) => {\n    const { text, icon, onClick } = props\n\n    return (\n      <div onClick={() => onClick(state.data)}>\n        <FelaComponent style={styles.button}>\n          <i className={`fas fa-${icon}`}></i>\n          {text}\n        </FelaComponent>\n      </div>\n    )\n  }\n\n  return (\n    <div style={styles.toolbar}>\n      <Button\n        onClick={handleExportData}\n        icon='file-download'\n        text='Export JSON'\n      />\n    </div>\n  )\n}\n\nexport default Toolbar\n","import React, { useContext, useEffect } from 'react'\n\nimport Editor from './editor/Editor'\nimport Toolbar from './tools/Toolbar'\n\nconst App: React.FC = () => {\n  const style = {\n    fontFamily: 'Consolas,monaco,monospace',\n    display: 'flex',\n    flexFlow: 'column',\n    padding: '0.5em',\n    width: '100vw',\n    height: '100vh',\n    alignItems: 'center',\n    color: 'white'\n  }\n\n  return (\n    <div style={style}>\n      <Editor />\n      <Toolbar />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { RendererProvider } from 'react-fela'\nimport { createRenderer } from 'fela'\nimport { StoreProvider } from './components/Store'\nimport App from './components/App'\nimport './index.css'\n\nconst renderer = createRenderer()\n\nReactDOM.render(\n  <RendererProvider renderer={renderer}>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </RendererProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}