{"version":3,"sources":["components/Store.tsx","components/tools/Dropzone.tsx","components/hooks/useInput.ts","components/editor/Field.tsx","components/editor/FieldBlock.tsx","components/editor/Editor.tsx","components/tools/Toolbar.tsx","components/tools/exporter.ts","components/App.tsx","index.tsx"],"names":["initialState","data","undefined","filename","Store","React","createContext","reducer","state","action","type","payload","Dropzone","props","onDrop","accept","errors","isLoading","useDropzone","getRootProps","getInputProps","styles","isDragActive","container","border","height","width","display","flexFlow","justifyContent","textAlign","dropzone","cursor","style","className","padding","color","maxWidth","margin","getColorForValue","value","isNaN","inferTypeFromString","useInput","initialValue","context","useState","inputVal","setInputVal","inputColor","setInputColor","useContext","dispatch","handleInputChange","e","currentTarget","handleInputBlur","newData","target","i","length","parseFloat","Field","name","isArrayItem","parentKeys","field","lineHeight","label","overflow","textOverflow","input","paddingLeft","backgroundColor","borderRadius","outline","FelaComponent","title","onChange","onBlur","FieldBlock","isLastItem","showBorder","isCollapsed","setCollapsed","handleClick","fieldBlock","borderLeft","blockLabel","blockIndex","brackets","keys","Object","bracket","Array","isArray","onClick","children","map","key","parentLength","Editor","setIsLoading","setErrors","handleFileSelect","useCallback","acceptedFiles","file","reader","FileReader","onload","JSON","parse","result","error","console","toString","readAsText","minWidth","flex","boxShadow","fontSize","scrollbarColor","Toolbar","toolbar","button","fontFamily","text","icon","Blob","stringify","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","handleExportData","App","alignItems","renderer","createRenderer","ReactDOM","render","RendererProvider","useReducer","Provider","getElementById"],"mappings":"uyBAYO,IAAMA,EAAuB,CAClCC,UAAMC,EACNC,SAAU,IAGCC,EAAQC,IAAMC,cAA4BN,GAE1CO,EAAU,SAACC,EAAeC,GACrC,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,EAAP,GAAYF,EAAZ,CAAmBL,SAAUM,EAAOE,UACtC,IAAK,cACH,OAAO,EAAP,GAAYH,EAAZ,CAAmBP,KAAMQ,EAAOE,UAClC,QACE,OAAOH,I,eCkBEI,EAzCE,SAACC,GAAgB,IACxBC,EAAsCD,EAAtCC,OAAQC,EAA8BF,EAA9BE,OAAQC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,UADD,EAEuBC,YAAY,CAChEJ,SACAC,WAFMI,EAFuB,EAEvBA,aAAcC,EAFS,EAETA,cAKhBC,GAPyB,EAEMC,aAKtB,CACbC,UAAW,CACTC,OAAQ,kBACRC,OAAQ,OACRC,MAAO,OACPC,QAAS,OACTC,SAAU,SACVC,eAAgB,SAChBC,UAAW,UAEbC,SAAU,CACRC,OAAQ,aAGZ,OACE,uCAAKC,MAAOZ,EAAOE,WAAeJ,KAChC,yBAAKc,MAAOZ,EAAOU,SAAUG,UAAU,oBACrC,yCAAOA,UAAU,kBAAqBd,MADxC,yDAGE,yBAAKa,MAAO,CAAEE,QAAS,QACrB,uBAAGD,UAAU,sBAEdlB,EACC,yBAAKiB,MAAO,CAAEG,MAAO,MAAOC,SAAU,MAAOC,OAAQ,WAClDtB,GAGH,oCAAGC,GAAa,uD,gBCzBpBsB,EAAmB,SAACC,GACxB,IACIJ,EAAQ,UACZ,OAV0B,SAACI,GAC3B,MAAc,SAAVA,GAA8B,UAAVA,GAAsC,mBAAVA,EAC3C,UACCC,MAAMD,IAA2B,kBAAVA,EACrB,SADgD,SAK/CE,CAAoBF,IAG/B,IAAK,SACH,MACF,IAAK,SACHJ,EAAQ,UACR,MACF,IAAK,UACHA,EAAQ,UAKZ,OAAOA,GA+CMO,EArCE,SAACC,EAAyBC,GAAuB,IAAD,EAC/BC,mBAAoBF,GADW,mBACxDG,EADwD,KAC9CC,EAD8C,OAE3BF,mBAClCP,EAAiBQ,IAH4C,mBAExDE,EAFwD,KAE5CC,EAF4C,OAKrCC,qBAAW/C,GAL0B,mBAKxDI,EALwD,KAKjD4C,EALiD,KA6B/D,MAAO,CACLL,WACAM,kBAxBwB,SAACC,GACzBN,EAAYM,EAAEC,cAAcf,QAwB5BgB,gBApBsB,WAEtBN,EAAcX,EAAiBQ,IAM/B,IAHA,IAxBsBP,EAwBlBiB,EAAUjD,EAAMP,KAChByD,EAASD,EAEJE,EAAI,EAAGA,EAAId,EAAQe,OAAS,EAAGD,IACtCD,EAASA,EAAOb,EAAQc,IAG1BD,EAAOb,EAAQA,EAAQe,OAAS,KA/BVpB,EA+BiCO,EA9BpDN,MAAMD,GACQ,SAAVA,GACU,UAAVA,GACGA,EAHcqB,WAAWrB,IAgCnCY,EAAS,CAAE1C,KAAM,WAAYC,QAAS8C,KAOtCR,eCfWa,EA5CD,SAACjD,GAAuB,IAC5BkD,EAAyClD,EAAzCkD,KAAMvB,EAAmC3B,EAAnC2B,MAAOwB,EAA4BnD,EAA5BmD,YAAaC,EAAepD,EAAfoD,WADC,EAEkCtB,EACnEH,EACAyB,GAFMlB,EAF2B,EAE3BA,SAAUE,EAFiB,EAEjBA,WAAYI,EAFK,EAELA,kBAAmBG,EAFd,EAEcA,gBAK3CnC,EAAS,CACb6C,MAAO,CACLvC,QAAS,OACTF,OAAQ,QACR0C,WAAY,SAEdC,MAAO,CACLzC,QAAS,eACTS,MAAM,GAAD,OAAK4B,EAAc,UAAY,WACpCK,SAAU,SACVC,aAAc,YAEhBC,MAAO,CACLC,YAAa,QACbC,gBAAiB,UACjBrC,MAAM,GAAD,OAAKa,GACVzB,OAAQ,oBACRkD,aAAc,MACdC,QAAS,SAIb,OACE,kBAACC,EAAA,EAAD,CAAe3C,MAAOZ,EAAO6C,OAC3B,0BAAMW,MAAOd,EAAM9B,MAAOZ,EAAO+C,OAAjC,UAA4CL,EAA5C,OACA,2BACE9B,MAAOZ,EAAOkD,MACd7D,KAAK,OACLoE,SAAUzB,EACV0B,OAAQvB,EACRhB,MAAOO,EACPgB,KAAMA,MCsECiB,EAzGI,SAAbA,EAAcnE,GAA4B,IAE5CqD,EAMErD,EANFqD,MACAH,EAKElD,EALFkD,KACAE,EAIEpD,EAJFoD,WACAD,EAGEnD,EAHFmD,YACAiB,EAEEpE,EAFFoE,WAN2C,EAQzCpE,EADFqE,kBAP2C,WASTpC,oBAAS,GATA,mBAStCqC,EATsC,KASzBC,EATyB,KAWvCC,EAAc,WAClBD,GAAcD,IAGV9D,EAAS,CACbiE,WAAY,CACVd,YAAa,SACbe,WAAW,GAAD,OAAKL,EAAa,oBAAsB,QAClD,SAAU,CACRT,gBAAiB,2BAGrBe,WAAY,CACV,SAAU,CACRxD,OAAQ,WAEVP,OAAQ,QACR0C,WAAY,QACZ/B,MAAO,WAETqD,WAAY,CACV,SAAU,CACRzD,OAAQ,WAEVI,MAAO,WAETsD,SAAU,CACRtD,MAAO,UAkCLuD,EAAOC,OAAOD,KAAKzB,GAEzB,OACE,kBAACU,EAAA,EAAD,CAAe3C,MAAOZ,EAAOiE,YACT,kBAAVpB,EACN,mBAlCkB,SAACrD,GACvB,IAAMgF,EAAUC,MAAMC,QAAQlF,EAAMqD,OAAS,CAAC,IAAK,KAAO,CAAC,IAAK,KAEhE,OACE,oCACE,kBAACU,EAAA,EAAD,CACE3C,MAAO+B,EAAc3C,EAAOoE,WAAapE,EAAOmE,YAEhD,yBAAKQ,QAASX,GACXtB,EACD,0BAAM9B,MAAOZ,EAAOqE,UAApB,KAAiCG,EAAQ,IACxCV,GACC,0BAAMlD,MAAOZ,EAAOqE,UAApB,SAEGG,EAAQ,IAAMZ,EAAa,GAAK,QAKxCpE,EAAMoF,UACLd,GACA,0BAAMlD,MAAOZ,EAAOqE,UACjBG,EAAQ,IAAMZ,EAAa,GAAK,SAYrC,CAAiBf,MAAOA,IACpBiB,GACAQ,EAAKO,KAAI,SAACC,EAAKxC,GACb,OACE,kBAACqB,EAAD,CACEmB,IAAKxC,EACLI,KAAMoC,EACNlC,WAAU,sBAAMA,GAAN,CAAkBkC,IAC5BC,aAAcT,EAAK/B,OACnBI,YAAa8B,MAAMC,QAAQ7B,GAC3Be,WAAYU,EAAK/B,OAAS,IAAMD,EAChCO,MAAOA,EAAMiC,SAMvB,kBAAC,EAAD,CACEpC,KAAMA,EACNvB,MAAO0B,EACPF,YAAaA,EACbC,WAAYA,MCpCPoC,EAvEA,WAAO,IAAD,EACOlD,qBAAW/C,GADlB,mBACZI,EADY,KACL4C,EADK,OAEeN,oBAAS,GAFxB,mBAEZ7B,EAFY,KAEDqF,EAFC,OAGSxD,mBAAS,IAHlB,mBAGZ9B,EAHY,KAGJuF,EAHI,KAKbC,EAAmBC,uBAAY,SAAAC,GACnCH,EAAU,IACVD,GAAa,GAEbI,EAAcR,KAAI,SAACS,GACjB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAU,SAAAH,GAAI,OAAI,SAACrD,GACxB,IAEE,IAAIrD,EAAO8G,KAAKC,MAAM1D,EAAEI,OAAOuD,QAC/B7D,EAAS,CAAE1C,KAAM,WAAYC,QAASgG,EAAK5C,OAC3CX,EAAS,CAAE1C,KAAM,cAAeC,QAASV,IACzCqG,GAAa,GACb,MAAOY,GACPC,QAAQD,MAAMA,GACdX,EAAUW,EAAME,cATH,CAWdT,GAEHC,EAAOS,WAAWV,QAEnB,IAcH,OACE,yBAAK1E,MAbO,CACZE,QAAS,MACTmF,SAAU,MACVC,KAAM,WACNlD,SAAU,OACVI,gBAAiB,UACjB+C,UAAW,wBACX9C,aAAc,MACd+C,SAAU,OACVC,eAAgB,oBAKZlH,EAAMP,KAQN2F,OAAOD,KAAKnF,EAAMP,MAAMiG,KAAI,SAACC,EAAKxC,GAChC,IAAMO,EAAQ1D,EAAMP,KAAKkG,GACzB,OACE,kBAAC,EAAD,CACEA,IAAKxC,EACLI,KAAMoC,EACNlC,WAAY,CAACkC,GACbC,aAAcR,OAAOD,KAAKnF,EAAMP,MAAM2D,OACtCI,aAAa,EACbiB,WAAYW,OAAOD,KAAKnF,EAAMP,MAAM2D,OAAS,IAAMD,EACnDuB,YAAY,EACZhB,MAAOA,OAlBb,kBAAC,EAAD,CACEjD,UAAWA,EACXD,OAAQA,EACRF,OAAQ0F,EACRzF,OAAO,uBCIF4G,EApDC,WAAO,IAAD,EACMxE,qBAAW/C,GADjB,mBACbI,EADa,KAEZP,GAFY,KAEOO,EAAnBP,MAAME,EAAaK,EAAbL,SAERkB,EAAS,CACbuG,QAAS,CACPlG,MAAO,OACP6F,KAAM,WACN5F,QAAS,OACTE,eAAgB,UAElBgG,OAAQ,CACNC,WAAY,aACZL,SAAU,OACVtD,WAAY,QACZnC,OAAQ,UACR,aAAc,SACdN,MAAO,OACPY,OAAQ,sBACRmC,gBAAiB,OACjBjD,OAAQ,iBACRkD,aAAc,MACd,SAAU,CACRD,gBAAiB,UAkBvB,OACE,yBAAKxC,MAAOZ,EAAOuG,SACjB,mBAfW,SAAC/G,GAA8D,IACpEkH,EAAwBlH,EAAxBkH,KAAMC,EAAkBnH,EAAlBmH,KAAMhC,EAAYnF,EAAZmF,QAEpB,OACE,yBAAKA,QAAS,kBAAMA,EAAQxF,EAAMP,QAChC,kBAAC2E,EAAA,EAAD,CAAe3C,MAAOZ,EAAOwG,QAC3B,uBAAG3F,UAAS,UAAK8F,EAAL,WACXD,MAQL,CACE/B,QAAS,kBCjDe,SAAC/F,EAAWE,GAC1C,IAAMwG,EAAO,IAAIsB,KAAK,CAAClB,KAAKmB,UAAUjI,EAAM,KAAM,IAAK,CACrDS,KAAM,qBAER,GAAIyH,OAAOC,UAAUC,iBAEnBF,OAAOC,UAAUC,iBAAiB1B,EAAMxG,OACrC,CAEH,IAAImI,EAAIC,SAASC,cAAc,KAC7BC,EAAMC,IAAIC,gBAAgBhC,GAC5B2B,EAAEM,KAAOH,EACTH,EAAEO,SAAW1I,EACboI,SAASO,KAAKC,YAAYT,GAC1BA,EAAEU,QACFC,YAAW,WACTV,SAASO,KAAKI,YAAYZ,GAC1BH,OAAOO,IAAIS,gBAAgBV,KAC1B,ID+BgBW,CAAiBnJ,EAAME,IACtC6H,KAAK,WACLD,KAAK,kBEvBEsB,EAtBO,WAAO,IAAD,EACAlG,qBAAW/C,GADX,mBACnBI,EADmB,UAc1B,OACE,yBAAKyB,MAZO,CACZ6F,WAAY,4BACZnG,QAAS,OACTC,SAAU,SACVO,QAAS,QACTT,MAAO,QACPD,OAAQ,QACR6H,WAAY,SACZlH,MAAO,UAKL,kBAAC,EAAD,MACC5B,EAAMP,MAAQ,kBAAC,EAAD,QCffsJ,G,MAAWC,eAEjBC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAkBJ,SAAUA,GAC1B,mBTkByB,SAAC1I,GAC5B,IAAML,EAAQoJ,qBAAWrJ,EAASP,GAClC,OAAO,kBAACI,EAAMyJ,SAAP,CAAgBrH,MAAOhC,GAAQK,EAAMoF,YSpB1C,KACE,kBAAC,EAAD,QAGJsC,SAASuB,eAAe,W","file":"static/js/main.2ba6ec83.chunk.js","sourcesContent":["import React, { useReducer, useContext } from 'react'\n\ninterface IAction {\n  type: string\n  payload: any\n}\n\ninterface IState {\n  data: any\n  filename: string\n}\n\nexport const initialState: IState = {\n  data: undefined,\n  filename: ''\n}\n\nexport const Store = React.createContext<IState | any>(initialState)\n\nexport const reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case 'SET_NAME':\n      return { ...state, filename: action.payload }\n    case 'CHANGE_DATA':\n      return { ...state, data: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const StoreProvider = (props: any): JSX.Element => {\n  const state = useReducer(reducer, initialState)\n  return <Store.Provider value={state}>{props.children}</Store.Provider>\n}\n","import React from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nconst Dropzone = (props: any) => {\n  const { onDrop, accept, errors, isLoading } = props\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept\n  })\n\n  const styles = {\n    container: {\n      border: '5px dashed gray',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      flexFlow: 'column',\n      justifyContent: 'center',\n      textAlign: 'center' as const\n    },\n    dropzone: {\n      cursor: 'pointer'\n    }\n  }\n  return (\n    <div style={styles.container} {...getRootProps()}>\n      <div style={styles.dropzone} className='dropzone-content'>\n        <input className='dropzone-input' {...getInputProps()} />\n        Drag-and-Drop a json file here or click to select file\n        <div style={{ padding: '3em' }}>\n          <i className='huge upload icon'></i>\n        </div>\n        {errors ? (\n          <div style={{ color: 'red', maxWidth: '50%', margin: '0 auto' }}>\n            {errors}\n          </div>\n        ) : (\n          <>{isLoading && <span>Importing file...</span>}</>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Dropzone\n","import React, { useState, useContext } from 'react'\nimport { Store } from '../Store'\n\nexport type ValueType = any\n\nconst inferTypeFromString = (value: any) => {\n  if (value === 'true' || value === 'false' || typeof value === 'boolean')\n    return 'boolean'\n  else if (!isNaN(value) || typeof value === 'number') return 'number'\n  else return 'string'\n}\n\nconst getColorForValue = (value: any) => {\n  const type = inferTypeFromString(value)\n  let color = '#ce824a'\n  switch (type) {\n    case 'string':\n      break\n    case 'number':\n      color = '#b5cea8'\n      break\n    case 'boolean':\n      color = '#358cd6'\n      break\n    default:\n      break\n  }\n  return color\n}\n\nconst unstringifyValue = (value: any) => {\n  if (!isNaN(value)) return parseFloat(value)\n  else if (value === 'true') return true\n  else if (value === 'false') return false\n  else return value\n}\n\nconst useInput = (initialValue: ValueType, context: string[]) => {\n  const [inputVal, setInputVal] = useState<ValueType>(initialValue)\n  const [inputColor, setInputColor] = useState<string>(\n    getColorForValue(inputVal)\n  )\n  const [state, dispatch] = useContext(Store)\n\n  const handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setInputVal(e.currentTarget.value)\n  }\n\n  // Only update store on blur\n  const handleInputBlur = () => {\n    // Update color based on type\n    setInputColor(getColorForValue(inputVal))\n\n    // Update store\n    let newData = state.data\n    let target = newData\n\n    for (let i = 0; i < context.length - 1; i++) {\n      target = target[context[i]]\n    }\n\n    target[context[context.length - 1]] = unstringifyValue(inputVal)\n\n    dispatch({ type: 'SET_DATA', payload: newData })\n  }\n\n  return {\n    inputVal,\n    handleInputChange,\n    handleInputBlur,\n    inputColor\n  }\n}\n\nexport default useInput\n","import React from 'react'\nimport { FelaComponent } from 'react-fela'\nimport useInput, { ValueType } from '../hooks/useInput'\n\ntype FieldProps = {\n  name: string\n  value: any\n  parentKeys: string[]\n  isArrayItem: boolean\n}\n\nconst Field = (props: FieldProps) => {\n  const { name, value, isArrayItem, parentKeys } = props\n  const { inputVal, inputColor, handleInputChange, handleInputBlur } = useInput(\n    value,\n    parentKeys\n  )\n\n  const styles = {\n    field: {\n      display: 'flex',\n      height: '1.5em',\n      lineHeight: '1.5em'\n    },\n    label: {\n      display: 'inline-block',\n      color: `${isArrayItem ? '#c586c0' : '#9cdcfe'}`,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    input: {\n      paddingLeft: '0.3em',\n      backgroundColor: '#333333',\n      color: `${inputColor}`,\n      border: '1px solid #202020',\n      borderRadius: '3px',\n      outline: 'none'\n    }\n  }\n\n  return (\n    <FelaComponent style={styles.field}>\n      <span title={name} style={styles.label}>{`${name}: `}</span>\n      <input\n        style={styles.input}\n        type='text'\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        value={inputVal}\n        name={name}\n      />\n    </FelaComponent>\n  )\n}\n\nexport default Field\n","import React, { useState } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport Field from './Field'\n\ntype FieldBlockProps = {\n  name: string\n  field: any\n  isArrayItem: boolean\n  isLastItem: boolean\n  showBorder?: boolean\n  parentLength: number\n  parentKeys: string[] // An array of keys to keep track of which portion of data\n}\n\nconst FieldBlock = (props: FieldBlockProps) => {\n  const {\n    field,\n    name,\n    parentKeys,\n    isArrayItem,\n    isLastItem,\n    showBorder = true\n  } = props\n  const [isCollapsed, setCollapsed] = useState(false)\n\n  const handleClick = () => {\n    setCollapsed(!isCollapsed)\n  }\n\n  const styles = {\n    fieldBlock: {\n      paddingLeft: '1.25em',\n      borderLeft: `${showBorder ? '1px solid #454545' : 'none'}`,\n      ':hover': {\n        backgroundColor: 'rgba(100,100,100,0.05)'\n      }\n    },\n    blockLabel: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      height: '1.5em',\n      lineHeight: '1.5em',\n      color: '#9cdcfe'\n    },\n    blockIndex: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      color: '#c586c0'\n    },\n    brackets: {\n      color: 'white'\n    }\n  }\n\n  // Wraps label and block in brackets depending on object type\n  const BracketsWrapper = (props: any) => {\n    const bracket = Array.isArray(props.field) ? ['[', ']'] : ['{', '}']\n\n    return (\n      <>\n        <FelaComponent\n          style={isArrayItem ? styles.blockIndex : styles.blockLabel}\n        >\n          <div onClick={handleClick}>\n            {name}\n            <span style={styles.brackets}>: {bracket[0]}</span>\n            {isCollapsed && (\n              <span style={styles.brackets}>\n                &#8230;\n                {bracket[1] + (isLastItem ? '' : ',')}\n              </span>\n            )}\n          </div>\n        </FelaComponent>\n        {props.children}\n        {!isCollapsed && (\n          <span style={styles.brackets}>\n            {bracket[1] + (isLastItem ? '' : ',')}\n          </span>\n        )}\n      </>\n    )\n  }\n\n  const keys = Object.keys(field)\n\n  return (\n    <FelaComponent style={styles.fieldBlock}>\n      {typeof field === 'object' ? (\n        <BracketsWrapper field={field}>\n          {!isCollapsed &&\n            keys.map((key, i) => {\n              return (\n                <FieldBlock\n                  key={i}\n                  name={key}\n                  parentKeys={[...parentKeys, key]}\n                  parentLength={keys.length}\n                  isArrayItem={Array.isArray(field)}\n                  isLastItem={keys.length - 1 === i}\n                  field={field[key]}\n                />\n              )\n            })}\n        </BracketsWrapper>\n      ) : (\n        <Field\n          name={name}\n          value={field}\n          isArrayItem={isArrayItem}\n          parentKeys={parentKeys}\n        />\n      )}\n    </FelaComponent>\n  )\n}\n\nexport default FieldBlock\n","import React, { useState, useContext, useCallback } from 'react'\nimport Dropzone from '../tools/Dropzone'\nimport FieldBlock from './FieldBlock'\nimport { Store } from '../Store'\n\nconst Editor = () => {\n  const [state, dispatch] = useContext(Store)\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState('')\n\n  const handleFileSelect = useCallback(acceptedFiles => {\n    setErrors('')\n    setIsLoading(true)\n\n    acceptedFiles.map((file: any) => {\n      const reader = new FileReader()\n\n      reader.onload = (file => (e: any) => {\n        try {\n          // Set data and filename in store\n          let data = JSON.parse(e.target.result)\n          dispatch({ type: 'SET_NAME', payload: file.name })\n          dispatch({ type: 'CHANGE_DATA', payload: data })\n          setIsLoading(false)\n        } catch (error) {\n          console.error(error)\n          setErrors(error.toString())\n        }\n      })(file)\n\n      reader.readAsText(file)\n    })\n  }, [])\n\n  const style = {\n    padding: '1em',\n    minWidth: '50%',\n    flex: '1 1 auto',\n    overflow: 'auto',\n    backgroundColor: '#1e1e1e',\n    boxShadow: 'inset 0 0 5px #101010',\n    borderRadius: '5px',\n    fontSize: '16px',\n    scrollbarColor: '#2e2e2e #1e1e1e'\n  }\n\n  return (\n    <div style={style}>\n      {!state.data ? (\n        <Dropzone\n          isLoading={isLoading}\n          errors={errors}\n          onDrop={handleFileSelect}\n          accept='application/json'\n        />\n      ) : (\n        Object.keys(state.data).map((key, i) => {\n          const field = state.data[key]\n          return (\n            <FieldBlock\n              key={i}\n              name={key}\n              parentKeys={[key]}\n              parentLength={Object.keys(state.data).length}\n              isArrayItem={false}\n              isLastItem={Object.keys(state.data).length - 1 === i}\n              showBorder={false}\n              field={field}\n            />\n          )\n        })\n      )}\n    </div>\n  )\n}\n\nexport default Editor\n","import React, { useContext } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport { Store } from '../Store'\nimport { handleExportData } from './exporter'\n\nconst Toolbar = () => {\n  const [state, dispatch] = useContext(Store)\n  const { data, filename } = state\n\n  const styles = {\n    toolbar: {\n      width: '100%',\n      flex: '0 1 50px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    button: {\n      fontFamily: 'sans-serif',\n      fontSize: '16px',\n      lineHeight: '2.5em',\n      cursor: 'pointer',\n      'text-align': 'center',\n      width: '12em',\n      margin: '0.5em 0.5em 0.5em 0',\n      backgroundColor: '#444',\n      border: '3px solid #222',\n      borderRadius: '7px',\n      ':hover': {\n        backgroundColor: '#555'\n      }\n    }\n  }\n\n  const Button = (props: { onClick: Function; text: string; icon: string }) => {\n    const { text, icon, onClick } = props\n\n    return (\n      <div onClick={() => onClick(state.data)}>\n        <FelaComponent style={styles.button}>\n          <i className={`${icon} icon`}></i>\n          {text}\n        </FelaComponent>\n      </div>\n    )\n  }\n\n  return (\n    <div style={styles.toolbar}>\n      <Button\n        onClick={() => handleExportData(data, filename)}\n        icon='download'\n        text='Export JSON'\n      />\n    </div>\n  )\n}\n\nexport default Toolbar\n","export const handleExportData = (data: any, filename: string) => {\n  const file = new Blob([JSON.stringify(data, null, 2)], {\n    type: 'application/json'\n  })\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename)\n  else {\n    // Others\n    let a = document.createElement('a'),\n      url = URL.createObjectURL(file)\n    a.href = url\n    a.download = filename\n    document.body.appendChild(a)\n    a.click()\n    setTimeout(() => {\n      document.body.removeChild(a)\n      window.URL.revokeObjectURL(url)\n    }, 0)\n  }\n}\n","import React, { useContext, useEffect } from 'react'\n\nimport Editor from './editor/Editor'\nimport { Store } from './Store'\nimport Toolbar from './tools/Toolbar'\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useContext(Store)\n\n  const style = {\n    fontFamily: 'Consolas,monaco,monospace',\n    display: 'flex',\n    flexFlow: 'column',\n    padding: '0.5em',\n    width: '100vw',\n    height: '100vh',\n    alignItems: 'center',\n    color: 'white'\n  }\n\n  return (\n    <div style={style}>\n      <Editor />\n      {state.data && <Toolbar />}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { RendererProvider } from 'react-fela'\nimport { createRenderer } from 'fela'\nimport { StoreProvider } from './components/Store'\nimport App from './components/App'\nimport './index.css'\n\nconst renderer = createRenderer()\n\nReactDOM.render(\n  <RendererProvider renderer={renderer}>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </RendererProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}