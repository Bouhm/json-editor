{"version":3,"sources":["components/Store.tsx","components/tools/Dropzone.tsx","components/hooks/useInput.ts","components/editor/Field.tsx","components/editor/FieldBlock.tsx","components/editor/Editor.tsx","components/tools/exporter.ts","components/tools/Toolbar.tsx","components/App.tsx","index.tsx"],"names":["initialState","data","undefined","Store","React","createContext","reducer","state","action","type","payload","Dropzone","props","onDrop","accept","useDropzone","getRootProps","getInputProps","styles","isDragActive","container","border","height","width","display","flexFlow","justifyContent","textAlign","dropzone","cursor","style","className","padding","getColorForValue","value","color","isNaN","inferTypeFromString","useInput","initialValue","context","useState","inputVal","setInputVal","inputColor","setInputColor","useContext","dispatch","handleInputChange","e","currentTarget","handleInputBlur","newData","target","i","length","parseFloat","Field","name","parentKeys","field","lineHeight","label","input","paddingLeft","backgroundColor","borderRadius","outline","FelaComponent","onChange","onBlur","FieldBlock","isArrayItem","isLastItem","showBorder","isCollapsed","setCollapsed","handleClick","fieldBlock","borderLeft","blockLabel","blockIndex","brackets","keys","Object","bracket","Array","isArray","onClick","children","map","key","parentLength","Editor","handleFileSelect","useCallback","acceptedFiles","file","reader","FileReader","onload","JSON","parse","result","readAsText","minWidth","flex","overflow","boxShadow","fontSize","scrollbarColor","handleExportData","Blob","stringify","window","navigator","msSaveOrOpenBlob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","Toolbar","toolbar","button","fontFamily","margin","text","icon","App","alignItems","renderer","createRenderer","ReactDOM","render","RendererProvider","useReducer","Provider","getElementById"],"mappings":"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","file":"static/js/main.ee6683dc.chunk.js","sourcesContent":["import React, { useReducer, useContext } from 'react'\n\ninterface IAction {\n  type: string\n  payload: any\n}\n\ninterface IState {\n  data: any\n}\n\nexport const initialState: IState = {\n  data: undefined\n}\n\nexport const Store = React.createContext<IState | any>(initialState)\n\nexport const reducer = (state: IState, action: IAction): IState => {\n  switch (action.type) {\n    case 'SET_DATA':\n      return { ...state, data: action.payload }\n    case 'CHANGE_DATA':\n      return { ...state, data: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const StoreProvider = (props: any): JSX.Element => {\n  const state = useReducer(reducer, initialState)\n  return <Store.Provider value={state}>{props.children}</Store.Provider>\n}\n","import React from 'react'\nimport { useDropzone } from 'react-dropzone'\n\nconst Dropzone = (props: any) => {\n  const { onDrop, accept } = props\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept\n  })\n\n  const styles = {\n    container: {\n      border: '5px dashed gray',\n      height: '100%',\n      width: '100%',\n      display: 'flex',\n      flexFlow: 'column',\n      justifyContent: 'center',\n      textAlign: 'center' as const\n    },\n    dropzone: {\n      cursor: 'pointer'\n    }\n  }\n  return (\n    <div style={styles.container} {...getRootProps()}>\n      <p style={styles.dropzone} className='dropzone-content'>\n        <input className='dropzone-input' {...getInputProps()} />\n        Drag-and-Drop a json file here or click to select file\n        <div style={{ padding: '3em' }}>\n          <i className='huge upload icon'></i>\n        </div>\n      </p>\n    </div>\n  )\n}\n\nexport default Dropzone\n","import React, { useState, useContext } from 'react'\nimport { Store } from '../Store'\n\nexport type ValueType = any\n\nconst inferTypeFromString = (value: any) => {\n  if (value === 'true' || value === 'false' || typeof value === 'boolean')\n    return 'boolean'\n  else if (!isNaN(value) || typeof value === 'number') return 'number'\n  else return 'string'\n}\n\nconst getColorForValue = (value: any) => {\n  const type = inferTypeFromString(value)\n  let color = '#ce824a'\n  switch (type) {\n    case 'string':\n      break\n    case 'number':\n      color = '#b5cea8'\n      break\n    case 'boolean':\n      color = '#358cd6'\n      break\n    default:\n      break\n  }\n  return color\n}\n\nconst unstringifyValue = (value: any) => {\n  if (!isNaN(value)) return parseFloat(value)\n  else if (value === 'true') return true\n  else if (value === 'false') return false\n  else return value\n}\n\nconst useInput = (initialValue: ValueType, context: string[]) => {\n  const [inputVal, setInputVal] = useState<ValueType>(initialValue)\n  const [inputColor, setInputColor] = useState<string>(\n    getColorForValue(inputVal)\n  )\n  const [state, dispatch] = useContext(Store)\n\n  const handleInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    setInputVal(e.currentTarget.value)\n  }\n\n  // Only update store on blur\n  const handleInputBlur = () => {\n    // Update color based on type\n    setInputColor(getColorForValue(inputVal))\n\n    // Update store\n    let newData = state.data\n    let target = newData\n\n    for (let i = 0; i < context.length - 1; i++) {\n      target = target[context[i]]\n    }\n\n    target[context[context.length - 1]] = unstringifyValue(inputVal)\n\n    dispatch({ type: 'SET_DATA', payload: newData })\n  }\n\n  return {\n    inputVal,\n    handleInputChange,\n    handleInputBlur,\n    inputColor\n  }\n}\n\nexport default useInput\n","import React from 'react'\nimport { FelaComponent } from 'react-fela'\nimport useInput, { ValueType } from '../hooks/useInput'\n\ntype FieldProps = {\n  name: string\n  value: any\n  parentKeys: string[]\n}\n\nconst Field = (props: FieldProps) => {\n  const { name, value, parentKeys } = props\n  const { inputVal, inputColor, handleInputChange, handleInputBlur } = useInput(\n    value,\n    parentKeys\n  )\n\n  const styles = {\n    field: {\n      display: 'flex',\n      height: '1.5em',\n      lineHeight: '1.5em'\n    },\n    label: {\n      display: 'inline-block',\n      color: '#9cdcfe'\n    },\n    input: {\n      paddingLeft: '0.3em',\n      backgroundColor: '#333333',\n      color: `${inputColor}`,\n      border: '1px solid #202020',\n      borderRadius: '3px',\n      outline: 'none'\n    }\n  }\n\n  return (\n    <FelaComponent style={styles.field}>\n      <span style={styles.label}>{`${name}: `}</span>\n      <input\n        style={styles.input}\n        type='text'\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        value={inputVal}\n        name={name}\n      />\n    </FelaComponent>\n  )\n}\n\nexport default Field\n","import React, { useState } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport Field from './Field'\n\ntype FieldBlockProps = {\n  name: string\n  field: any\n  isArrayItem: boolean\n  isLastItem: boolean\n  showBorder?: boolean\n  parentLength: number\n  parentKeys: string[] // An array of keys to keep track of which portion of data\n}\n\nconst FieldBlock = (props: FieldBlockProps) => {\n  const {\n    field,\n    name,\n    parentKeys,\n    isArrayItem,\n    isLastItem,\n    showBorder = true\n  } = props\n  const [isCollapsed, setCollapsed] = useState(false)\n\n  const handleClick = () => {\n    setCollapsed(!isCollapsed)\n  }\n\n  const styles = {\n    fieldBlock: {\n      paddingLeft: '1.25em',\n      borderLeft: `${showBorder ? '1px solid #454545' : 'none'}`,\n      ':hover': {\n        backgroundColor: 'rgba(100,100,100,0.05)'\n      }\n    },\n    blockLabel: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      height: '1.5em',\n      lineHeight: '1.5em',\n      color: '#9cdcfe'\n    },\n    blockIndex: {\n      ':hover': {\n        cursor: 'pointer'\n      },\n      color: '#c586c0'\n    },\n    brackets: {\n      color: 'white'\n    }\n  }\n\n  // Wraps label and block in brackets depending on object type\n  const BracketsWrapper = (props: any) => {\n    const bracket = Array.isArray(props.field) ? ['[', ']'] : ['{', '}']\n\n    return (\n      <>\n        <FelaComponent\n          style={isArrayItem ? styles.blockIndex : styles.blockLabel}\n        >\n          <div onClick={handleClick}>\n            {name}\n            <span style={styles.brackets}>: {bracket[0]}</span>\n            {isCollapsed && (\n              <span style={styles.brackets}>\n                &#8230;\n                {bracket[1] + (isLastItem ? '' : ',')}\n              </span>\n            )}\n          </div>\n        </FelaComponent>\n        {props.children}\n        {!isCollapsed && (\n          <span style={styles.brackets}>\n            {bracket[1] + (isLastItem ? '' : ',')}\n          </span>\n        )}\n      </>\n    )\n  }\n\n  const keys = Object.keys(field)\n\n  return (\n    <FelaComponent style={styles.fieldBlock}>\n      {typeof field === 'object' ? (\n        <BracketsWrapper field={field}>\n          {!isCollapsed &&\n            keys.map((key, i) => {\n              return (\n                <FieldBlock\n                  key={i}\n                  name={key}\n                  parentKeys={[...parentKeys, key]}\n                  parentLength={keys.length}\n                  isArrayItem={Array.isArray(field)}\n                  isLastItem={keys.length - 1 === i}\n                  field={field[key]}\n                />\n              )\n            })}\n        </BracketsWrapper>\n      ) : (\n        <Field name={name} value={field} parentKeys={parentKeys} />\n      )}\n    </FelaComponent>\n  )\n}\n\nexport default FieldBlock\n","import React, { useContext, useCallback } from 'react'\nimport Dropzone from '../tools/Dropzone'\nimport FieldBlock from './FieldBlock'\nimport { Store } from '../Store'\n\nconst Editor = () => {\n  const [state, dispatch] = useContext(Store)\n\n  const handleFileSelect = useCallback(acceptedFiles => {\n    acceptedFiles.map((file: Blob) => {\n      // Initialize FileReader browser API\n      const reader = new FileReader()\n      // onload callback gets called after the reader reads the file data\n      reader.onload = (file => (e: any) => {\n        let data = JSON.parse(e.target.result)\n        dispatch({ type: 'CHANGE_DATA', payload: data })\n      })(file)\n\n      reader.readAsText(file)\n    })\n  }, [])\n\n  const style = {\n    padding: '1em',\n    width: '50%',\n    minWidth: '30em',\n    flex: '1 1 auto',\n    overflow: 'auto',\n    backgroundColor: '#1e1e1e',\n    boxShadow: 'inset 0 0 5px #101010',\n    borderRadius: '5px',\n    fontSize: '16px',\n    scrollbarColor: '#2e2e2e #1e1e1e'\n  }\n\n  return (\n    <div style={style}>\n      {!state.data ? (\n        <Dropzone onDrop={handleFileSelect} accept='application/json' />\n      ) : (\n        Object.keys(state.data).map((key, i) => {\n          const field = state.data[key]\n          return (\n            <FieldBlock\n              key={i}\n              name={key}\n              parentKeys={[key]}\n              parentLength={Object.keys(state.data).length}\n              isArrayItem={Array.isArray(field)}\n              isLastItem={Object.keys(state.data).length - 1 === i}\n              showBorder={false}\n              field={field}\n            />\n          )\n        })\n      )}\n    </div>\n  )\n}\n\nexport default Editor\n","export const handleExportData = (data: any) => {\n  const file = new Blob([JSON.stringify(data, null, 2)], {\n    type: 'application/json'\n  })\n  if (window.navigator.msSaveOrOpenBlob)\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, '.json')\n  else {\n    // Others\n    let a = document.createElement('a'),\n      url = URL.createObjectURL(file)\n    a.href = url\n    a.download = '.json'\n    document.body.appendChild(a)\n    a.click()\n    setTimeout(() => {\n      document.body.removeChild(a)\n      window.URL.revokeObjectURL(url)\n    }, 0)\n  }\n}\n","import React, { useContext } from 'react'\nimport { FelaComponent } from 'react-fela'\nimport { Store } from '../Store'\nimport { handleExportData } from './exporter'\n\nconst Toolbar = () => {\n  const [state, dispatch] = useContext(Store)\n\n  const styles = {\n    toolbar: {\n      width: '100%',\n      flex: '0 1 50px',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    button: {\n      fontFamily: 'sans-serif',\n      fontSize: '16px',\n      lineHeight: '2.5em',\n      cursor: 'pointer',\n      'text-align': 'center',\n      width: '12em',\n      margin: '0.5em 0.5em 0.5em 0',\n      backgroundColor: '#444',\n      border: '3px solid #222',\n      borderRadius: '7px',\n      ':hover': {\n        backgroundColor: '#555'\n      }\n    }\n  }\n\n  const Button = (props: { onClick: Function; text: string; icon: string }) => {\n    const { text, icon, onClick } = props\n\n    return (\n      <div onClick={() => onClick(state.data)}>\n        <FelaComponent style={styles.button}>\n          <i className={`${icon} icon`}></i>\n          {text}\n        </FelaComponent>\n      </div>\n    )\n  }\n\n  return (\n    <div style={styles.toolbar}>\n      <Button onClick={handleExportData} icon='download' text='Export JSON' />\n    </div>\n  )\n}\n\nexport default Toolbar\n","import React, { useContext, useEffect } from 'react'\n\nimport Editor from './editor/Editor'\nimport { Store } from './Store'\nimport Toolbar from './tools/Toolbar'\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useContext(Store)\n\n  const style = {\n    fontFamily: 'Consolas,monaco,monospace',\n    display: 'flex',\n    flexFlow: 'column',\n    padding: '0.5em',\n    width: '100vw',\n    height: '100vh',\n    alignItems: 'center',\n    color: 'white'\n  }\n\n  return (\n    <div style={style}>\n      <Editor />\n      {state.data && <Toolbar />}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { RendererProvider } from 'react-fela'\nimport { createRenderer } from 'fela'\nimport { StoreProvider } from './components/Store'\nimport App from './components/App'\nimport './index.css'\n\nconst renderer = createRenderer()\n\nReactDOM.render(\n  <RendererProvider renderer={renderer}>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </RendererProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}